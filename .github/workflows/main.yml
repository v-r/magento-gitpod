name: m2-actions-test
on: [push]

jobs:
  magento2-build:
    runs-on: ubuntu-latest
    container: ubuntu
    name: 'm2 unit tests & build'
    services:
      mysql:
        image: docker://mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: magento
          MYSQL_DATABASE: magento
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      elasticsearch:
        image: docker://elasticsearch:7.1.0
        ports:
          - 9200:9200
        options: -e="discovery.type=single-node" --health-cmd="curl http://localhost:9200/_cluster/health" --health-interval=10s --health-timeout=5s --health-retries=10
    steps:
      - uses: actions/checkout@v1 # pulls your repository, M2 src must be in a magento directory
      - name: 'this step will execute all the unit tests available'
        if: always()
        uses: MAD-I-T/magento-actions@v3.10
        env:
          COMPOSER_AUTH: ${{secrets.COMPOSER_AUTH}}
        with:
          process: 'unit-test'
          elasticsearch: 1
      - name: 'this step starts static testing the code'
        if: always()
        uses: MAD-I-T/magento-actions@v3.10
        env:
          COMPOSER_AUTH: ${{secrets.COMPOSER_AUTH}}
        with:
          process: 'static-test'
          elasticsearch: 1
      - name: 'this step will build an magento artifact'
        if: always()
        uses: MAD-I-T/magento-actions@v3.10
        env:
          COMPOSER_AUTH: ${{secrets.COMPOSER_AUTH}}
        with:
          process: 'build'
          elasticsearch: 1
